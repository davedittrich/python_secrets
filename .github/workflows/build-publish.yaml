# .github/workflows/build-publish.yml
name: Build and Publish

on:
  workflow_run:
    workflows: ["Test"]
    branches:
      - main
      - develop
    types:
      - completed

jobs:
  build:
    needs: test
    runs-on: ubuntu-22.04
    env:
      PY_COLORS: 1
      PYTHON_VERSION: '3.12.6'
    steps:
      - name: Dump select GitHub event context
        run: |
          echo "github.ref=${{ github.ref }}"
          echo "github.event.head_commit=$HEAD_COMMIT"
        env:
          HEAD_COMMIT: ${{ toJson(github.event.head_commit) }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{env.PYTHON_VERSION}}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3
          # Get from poetry.toml
          # virtualenvs-create: false
          # prefer-active-python: true

      - name: Install poetry dependencies
        run: poetry install --no-root --with=dev --with=test

      - name: Add Dynamic Versioning Plugin
        run: |
          poetry self add poetry-dynamic-versioning[plugin]

      - name: Update the version
        run: |
          poetry dynamic-versioning
          echo "VERSION=$(poetry version --short)"

      - name: Build artifacts
        run: make twine-check

      - name: Store artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist/*
  publish:
    needs: build
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-22.04
    env:
      PY_COLORS: 1

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: ./dist

      # [1-build-publish-workflow]
      - name: Publish release candidate artifacts to TestPyPI
        if: contains(github.ref, 'rc') == true
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository_url: https://test.pypi.org/legacy/
          user: __token__
          password: ${{ secrets.PSEC_TEST_PYPI_PASSWORD }}
          packages-dir: ./dist
          verify-metadata: false

      - name: Publish tagged artifacts to PyPI
        if: contains(github.ref, 'rc') == false
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PSEC_PYPI_PASSWORD }}
          packages-dir: ./dist
          verify-metadata: false
      # ![1-build-publish-workflow]

