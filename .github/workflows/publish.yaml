name: Publish

on:
  push:
    tags:
      - '*.*.*'

permissions:
  contents: read

jobs:
  pypi-publish:
    name: Upload release to PyPI
    runs-on: ubuntu-22.04
    env:
        PY_COLORS: 1
        PYTHON_VERSION: '3.12.6'
    environment:
      name: pypi
    permissions:
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{env.PYTHON_VERSION}}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3

      - name: Install poetry dependencies
        run: poetry install --no-root --with=dev --with=test

      - name: Add Dynamic Versioning Plugin
        run: |
          poetry self add poetry-dynamic-versioning[plugin]

      - name: Update the version
        run: |
          poetry dynamic-versioning
          echo "VERSION=$(poetry version --short)"

      - name: Package project
        run: make twine-check

      # [1-build-publish-workflow]
      - name: Publish release candidate artifacts to TestPyPI
        if: contains(github.ref, 'rc') == true
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository_url: https://test.pypi.org/legacy/
          user: __token__
          password: ${{ secrets.PSEC_TEST_PYPI_PASSWORD }}
          verify-metadata: false

      - name: Publish tagged artifacts to PyPI
        if: contains(github.ref, 'rc') == false
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PSEC_PYPI_PASSWORD }}
          verify-metadata: false
      # ![1-build-publish-workflow]
