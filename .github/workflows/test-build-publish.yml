name: Test Build and Publish
on: [ push, pull_request ]
jobs:
  build-test:
    name: Test and Build
    runs-on: ubuntu-18.04
    env:
      PY_COLORS: 1
      TOX_PARALLEL_NO_SPINNER: 1
    steps:
    - name: Check out src from GitHub
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Expose branch name
      run: echo Running on branch \"${GITHUB_REF##*/}\"
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        sudo apt-get -y install make bats
        python3 -m pip install --upgrade pip setuptools
        [ -f requirements.txt ] && python3 -m pip install -Ur requirements.txt
        [ -f test-requirements.txt ] && python3 -m pip install -Ur test-requirements.txt
        make bats-libraries
    - name: Extract version
      run: python3 setup.py --version
      env:
        SETUPTOOLS_SCM_DEBUG: 1
    - name: Run tests
      run: make test
    - name: Build artifacts
      run: make bdist_wheel sdist twine-check
    - name: Store the source distribution
      uses: actions/upload-artifact@v2
      with:
        name: dist-src
        path: dist
  deploy:
    name: Publish
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs:
      - build-test
    runs-on: ubuntu-18.04
    env:
      PY_COLORS: 1
      TOX_PARALLEL_NO_SPINNER: 1
    steps:
    - name: Check out src from Git
      uses: actions/checkout@v2
    - name: Switch to using Python 3.8 by default
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python3 -m pip install twine
    - name: Download all the dists
      uses: actions/download-artifact@v2
      with:
        name: dist-src
        path: dist/
    - name: Verify metadata
      run: twine check dist/*
    - name: Publish to TestPyPI
      if: >-
        github.event_name == 'push' &&
        github.ref == 'refs/heads/develop'
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.test_pypi_password }}
        repository_url: https://test.pypi.org/legacy/
    - name: Publish to PyPI
      if: >-
        github.event_name == 'push' &&
        startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.pypi_password }}

