[tox]
# In practice, you can optimize by first running basic tests
# 'pep8,bandit,docs' and only after those succeed go on to
# run the remaining (default) tests. E.g.,
# $ tox -e pep8,bandit,docs && tox -e py36,py37,py38,bats,pypi

# envlist = pep8,bandit,docs,py36,py37,py38,bats,pypi
envlist = py36,py37,py38,py39,bats,pypi
skip_missing_interpreters = True
skipsdists = True
requires = tox-conda
           setuptools>=40.9.0
           setuptools_scm

[testenv]
setenv =
    VIRTUAL_ENV={envdir}
    BRANCH_NAME=master
    PYTHONPATH={toxinidir}:{toxinidir}/psec
distribute = False
install_command = python -m pip install {opts} {packages}
conda_deps =
       pytest
conda_channels =
       conda-forge
# Make sure these match setup.py!
deps = -r{toxinidir}/requirements-dev.txt
       -r{toxinidir}/requirements.txt
commands = pytest {posargs}

; If you want to make tox run the tests with the same versions, create a
; requirements.txt with the pinned versions and uncomment the following lines:
; deps =
;     -r{toxinidir}/requirements.txt

[testenv:pypi]
basepython = python3.8
deps = -r{toxinidir}/requirements-dev.txt
whitelist_externals = make
commands = make twine-check

[testenv:pep8]
basepython = python3.8
deps = -r{toxinidir}/requirements-dev.txt
commands = flake8 psec tests docs/conf.py setup.py

[testenv:bandit]
basepython = python3.8
; Run security linter
deps = -r{toxinidir}/requirements-dev.txt
commands = bandit -c bandit.yaml -r psec -x tests -n5

[testenv:docs]
basepython = python3.8
deps = -r{toxinidir}/requirements-dev.txt
whitelist_externals = make
commands = 
   make clean install-active
   sphinx-build -b html docs docs/_build

[testenv:bats]
; Run bats unit tests
; Deal with this by requiring docutils==0.15:
; #   Traceback (most recent call last):
; #     File "/Users/dittrich/git/python_secrets/.tox/bats/lib/python3.7/site-packages/cliff/help.py", line 43, in __call__
; #       factory = ep.load()
; #     File "/Users/dittrich/git/python_secrets/.tox/bats/lib/python3.7/site-packages/pkg_resources/__init__.py", line 2444, in load
; #       self.require(*args, **kwargs)
; #     File "/Users/dittrich/git/python_secrets/.tox/bats/lib/python3.7/site-packages/pkg_resources/__init__.py", line 2467, in require
; #       items = working_set.resolve(reqs, env, installer, extras=self.extras)
; #     File "/Users/dittrich/git/python_secrets/.tox/bats/lib/python3.7/site-packages/pkg_resources/__init__.py", line 792, in resolve
; #       raise VersionConflict(dist, req).with_context(dependent_req)
; #   pkg_resources.ContextualVersionConflict: (docutils 0.16 (/Users/dittrich/git/python_secrets/.tox/bats/lib/python3.7/site-packages), Requirement.parse('docutils<0.16,>=0.10'), {'botocore'})
deps = -r{toxinidir}/requirements-dev.txt
whitelist_externals = make
commands = make test-bats

